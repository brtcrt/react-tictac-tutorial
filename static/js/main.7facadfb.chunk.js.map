{"version":3,"sources":["index.js"],"names":["Square","props","state","value","className","onClick","this","React","Component","Board","squares","Array","fill","xIsNext","i","slice","setState","console","log","AutoPlay","handleClick","status","winner","lines","length","a","b","c","calculateWinner","renderSquare","Game","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,MAHQ,E,0CAMjB,WAAU,IAAD,OACP,OACE,wBAAQC,UAAU,SAClBC,QAAS,WAAM,EAAKJ,MAAMI,WAD1B,SAGGC,KAAKL,MAAME,Y,GAZDI,IAAMC,WAkBnBC,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXQ,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJM,E,+CAOnB,SAAYC,GACV,IAAMJ,EAAUJ,KAAKJ,MAAMQ,QAAQK,QACnCL,EAAQI,GAAKR,KAAKJ,MAAMW,QAAU,IAAM,IACxCP,KAAKU,SAAS,CAACN,QAASA,EAASG,SAAUP,KAAKJ,MAAMW,UA8D5D,SAAkBH,GAChBO,QAAQC,IAAIR,GA9DRS,CAAST,K,0BAEX,SAAaI,GAAI,IAAD,OACd,OAAO,cAACd,EAAD,CAAQG,MAAOG,KAAKJ,MAAMQ,QAAQI,GAAIT,QAAS,WAAM,EAAKe,YAAYN,Q,oBAG/E,WACE,IACIO,EADEC,EAyDZ,SAAyBZ,GAWvB,IAVA,IAAMa,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAT,EAAI,EAAGA,EAAIS,EAAMC,OAAQV,IAAK,CAAC,IAAD,cACnBS,EAAMT,GADa,GAC9BW,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACpE,OAAOjB,EAAQe,GAGnB,OAAO,KA1EYG,CAAgBtB,KAAKJ,MAAMQ,SAQ1C,OALEW,EADEC,EACO,WAAaA,EAEb,iBAAmBhB,KAAKJ,MAAMW,QAAU,IAAM,KAIvD,gCACE,qBAAKT,UAAU,SAAf,SAAyBiB,IACzB,sBAAKjB,UAAU,YAAf,UACGE,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,MAErB,sBAAKzB,UAAU,YAAf,UACGE,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,MAErB,sBAAKzB,UAAU,YAAf,UACGE,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,GAClBvB,KAAKuB,aAAa,a,GA3CTtB,IAAMC,WAkDpBsB,E,4JACJ,WACE,OACE,sBAAK1B,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACK,EAAD,MAEF,sBAAKL,UAAU,YAAf,UACE,wBACA,iC,GATSG,IAAMC,WAkBzBuB,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,W","file":"static/js/main.7facadfb.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: null,\r\n    };\r\n  }\r\n    render() {\r\n      return (\r\n        <button className=\"square\" \r\n        onClick={()=> {this.props.onClick()}}\r\n        >\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        xIsNext: true,\r\n      };\r\n    }\r\n    handleClick(i) {\r\n      const squares = this.state.squares.slice();\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n      this.setState({squares: squares, xIsNext: !this.state.xIsNext});\r\n      AutoPlay(squares);\r\n    }\r\n    renderSquare(i) {\r\n      return <Square value={this.state.squares[i]} onClick={()=> {this.handleClick(i)}}/>;\r\n    }\r\n  \r\n    render() {\r\n      const winner = calculateWinner(this.state.squares);\r\n      let status;\r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      } else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n\r\nfunction AutoPlay(squares) {\r\n  console.log(squares);\r\n}\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}